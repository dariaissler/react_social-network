{"version":3,"sources":["Components/hoc/withAuthRedirect.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileDataForm.js","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","onChange","e","currentTarget","value","autoFocus","ProfileDataFormReduxForm","reduxForm","form","onSubmit","handleSubmit","className","s","descriptionBlock","Field","name","placeholder","component","Input","Textarea","profile","lookingForAJob","type","lookingForAJobDescription","Object","keys","contacts","map","key","contact","ProfileData","fullName","aboutMe","contactTitle","contactValue","isOwner","onClick","goToEditMode","Contact","ProfileInfo","Preloader","userImage","src","photos","large","userPhoto","alt","target","files","length","savePhoto","initialValues","formData","saveProfile","Post","item","message","likesCounts","maxLenght","maxLengthCreator","MyPosts","memo","postsElements","posts","p","id","AddPostReduxForm","validate","required","postsBlock","values","addPost","newPostBody","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","profileBlock","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.a7b01b14.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component{\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n        return <Component {...this.props}/>\n        }\n    }\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n    return ConnectAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImage\":\"ProfileInfo_userImage__2iqPA\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3tCBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2garX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__sjhiM\",\"posts\":\"MyPosts_posts__C8sZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__a09yL\"};","import React , {useState, useEffect } from 'react';\n\n\nconst ProfileStatusWithHooks = (props) =>  {\n\nconst [editMode, setEditMode] = useState(false);\nconst [status, setStatus] = useState(props.status);\n   \nuseEffect(() => {\nsetStatus(props.status);\n}, [props.status] );\n\nconst activateEditMode = () => {\n    setEditMode(true);\n}\nconst deactivateEditMode = () => {\n    setEditMode(false);\n   props.updateUserStatus(status);\n}\nconst onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n}\n    return (\n        <div>\n        { !editMode && \n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}  </span>\n       </div>\n}\n{ editMode &&  \n           \n       <div>\n          <input onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true}/>\n       </div>\n            }\n        </div>\n      )\n }\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport {reduxForm, Field} from 'redux-form';\nimport s from '../../common/FormControls/FormControl.module.css';\nimport {Input, Textarea} from '../../common/FormControls/FormsControls';\n\nconst ProfileDataForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n              <div>\n    <div className={s.descriptionBlock}>\n    {/* <h3>{props.profile.fullName}</h3> */}\n    <Field  name={\"fullName\"} placeholder={\"fullName\"} component={Input}/>\n       {/* <h4>about me: </h4> */}\n       {/* <p>{props.profile.aboutMe}</p> */}\n       <Field name={\"aboutMe\"} placeholder={\"about me\"} component={Textarea}/>\n    <p>{(props.profile.lookingForAJob) } </p>\n    <p>looking for a job</p> \n    <Field  name={\"lookingForAJob\"}  component={Input} type={\"checkbox\"}/>\n    <p>{props.profile.lookingForAJobDescription}</p>\n    <Field  name={\"lookingForAJobDescription\"} placeholder={\"professianal skills\"} component={Textarea}/>\n  \n   <div>Contacts: {Object.keys(props.profile.contacts)\n   .map(key => {\n      return  <div key={key} className={s.contact}>\n          <b>{key}:</b>  <Field name={\"contacts.\" + key} placeholder={key} component={Input}/>\n      </div>\n   })}</div>\n   </div> \n   <button>save</button>\n   </div>\n    </form>\n}\n\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport userPhoto from '../../../assets/images/user.png';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from './ProfileDataForm';\n\n\n\nconst ProfileInfo = (props) => {\n\n    const [editMode, setEditMode] = useState(false);\n\n    if(!props.profile){\n        return <Preloader/>\n    }\n\n    const onMainPhotoChange = (e) => {\n   if(e.target.files.length){\n       props.savePhoto(e.target.files[0]);\n   }\n}\nconst onSubmit =(formData) => {\n   props.saveProfile(formData)\n    setEditMode(false);\n}\n\n   \n    return (\n       \n        <div>\n     \n     <div>\n     <img className={s.userImage} src={props.profile.photos.large ?? userPhoto} alt=\"userImage\"/>\n     <br/>\n     {props.isOwner && <input type={\"file\"} onChange={onMainPhotoChange} />}\n     \n     </div>\n     <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\n     {editMode ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/> \n               : <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => {setEditMode(true)}}/>}\n     \n\n     </div>\n    )\n}\nconst ProfileData = (props) => {\n    return (\n        <div>\n    <div className={s.descriptionBlock} >\n    <h3>{props.profile.fullName}</h3>\n       <b>about me: </b>\n       <p>{props.profile.aboutMe}</p>\n    <p>{(props.profile.lookingForAJob) ? 'Я ищу работу' : 'Я не ищу работу, спасибо!'}</p>\n    <p>{props.profile.lookingForAJobDescription}</p>\n  \n   <div><b>Contacts:</b> {Object.keys(props.profile.contacts)\n   .map(key => {\n      return  <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\n   })}</div>\n   </div> \n   { props.isOwner && <button onClick={props.goToEditMode}>edit info</button>}\n   </div>\n    )}\n\n\n\nconst Contact = ({contactTitle, contactValue}) => {\nreturn <div className={s.contact}>{contactTitle}: {contactValue}</div>\n} \n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\n\n\nconst Post = (props) => {\n    \n\n    return(\n    <div className={s.item}>\n        {props.message}\n        {props.name}\n        <div>\n        <span>🖤 ~ </span>    { props.likesCounts}\n        </div>\n        \n    </div>\n\n\n    )\n}\n\nexport default Post;","\nimport React from 'react';\nimport { Field , reduxForm} from 'redux-form';\nimport Post from '../Post/Post';  \nimport s from './MyPosts.module.css';\nimport {required, maxLengthCreator}  from '../../../Utils/Validators/validator';\nimport {Textarea} from '../../common/FormControls/FormsControls';\n\n\nconst maxLenght = maxLengthCreator(100);\n\nconst  MyPosts = React.memo (props  => {\n\n// shouldComponentUpdate(nextProps, nextState){\n// return nextProps !== this.props || nextState !== this.state\n// }    //pure component сделает эту проверку автоматически !!!!!\n\nlet postsElements =props.posts.map(p =>  <Post message={p.message} key={p.id} likesCounts={p.likesCounts}/>)\n \nlet onAddPost = (values) => {\n       props.addPost(values.newPostBody)\n  \n}\n\nconst AddPostForm = (props) => {\n       return <form onSubmit={props.handleSubmit}>     \n        <Field component={Textarea} name=\"newPostBody\" validate={[required, maxLenght]} placeholder={\"Type your post\"}/>\n        <button>Add post</button>\n       </form>\n   }\nconst AddPostReduxForm = reduxForm({ form: 'addPostForm'})(AddPostForm);\n\n    return (\n        <div className={s.postsBlock}>\n        <h3>My posts</h3>\n        <div>\n     <AddPostReduxForm onSubmit={onAddPost}/>\n        </div>\n<div className={s.posts}> \n       {postsElements}    \n</div>\n </div>\n    )\n})\n\n\nexport default MyPosts;","\nimport { connect } from 'react-redux';\nimport {addPostActionCreator} from '../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\n\n\nlet mapStateToProps = (state)=> {\n    return{\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps =(dispatch) => {\nreturn{\n    addPost: (newPostBody)=> {\n        dispatch(addPostActionCreator(newPostBody));\n    },\n}\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer' ;\nimport s from './Profile.module.css';\n\n\n\nconst Profile = (props) => {\n    return ( \n        <div className={s.profileBlock}>\n       \n       <ProfileInfo profile={props.profile} \n       status={props.status} \n       updateUserStatus={props.updateUserStatus}\n       isOwner={props.isOwner}\n       savePhoto={props.savePhoto}\n       saveProfile={props.saveProfile}/>\n       <MyPostsContainer store={props.store} />\n      </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile} from '../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\n\n\nclass  ProfileContainer extends React.Component{\n\n    refreshProfile(){\n        let userId = this.props.match.params.userId;\n        if(!userId){\n            userId = this.props.authorizedUserId\n            if(!userId){\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n         this.props.getUserStatus(userId);\n    }\n    componentDidMount(){\n     this.refreshProfile();\n}\n\ncomponentDidUpdate(prevProps, prevState, snapshot){\n    if( this.props.match.params.userId!== prevProps.match.params.userId){\n        this.refreshProfile();\n    }\n}\n    render() {\n        return ( \n           <Profile {...this.props} \n           profile={this.props.profile} \n           status={this.props.status}\n           updateUserStatus={this.props.updateUserStatus}\n           isOwner={!this.props.match.params.userId}\n           savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n    connect(mapStateToProps, ({getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile})),\n    withRouter,\n    withAuthRedirect\n)\n(ProfileContainer);\n\n"],"sourceRoot":""}