{"version":3,"sources":["Components/hoc/withAuthRedirect.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","className","s","userImage","src","photos","large","userPhoto","alt","fullName","descriptionBlock","aboutMe","lookingForAJob","lookingForAJobDescription","href","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Post","item","message","name","likesCounts","maxLenght","maxLengthCreator","MyPosts","memo","postsElements","posts","map","p","id","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","postsBlock","values","addPost","newPostBody","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","profileBlock","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.b473e09e.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component{\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n        return <Component {...this.props}/>\n        }\n    }\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n    return ConnectAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImage\":\"ProfileInfo_userImage__2iqPA\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3tCBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2garX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__sjhiM\",\"posts\":\"MyPosts_posts__C8sZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__a09yL\"};","import React , {useState, useEffect } from 'react';\n\n\nconst ProfileStatusWithHooks = (props) =>  {\n\nconst [editMode, setEditMode] = useState(false);\nconst [status, setStatus] = useState(props.status);\n   \nuseEffect(() => {\nsetStatus(props.status);\n}, [props.status] );\n\nconst activateEditMode = () => {\n    setEditMode(true);\n}\nconst deactivateEditMode = () => {\n    setEditMode(false);\n   props.updateUserStatus(status);\n}\nconst onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n}\n    return (\n        <div>\n        { !editMode && \n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}  </span>\n       </div>\n}\n{ editMode &&  \n           \n       <div>\n          <input onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true}/>\n       </div>\n            }\n        </div>\n      )\n }\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport userPhoto from '../../../assets/images/user.png';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\n\n\nconst ProfileInfo = (props) => {\n\n    if(!props.profile){\n        return <Preloader/>\n    }\n   \n    return (\n       \n        <div>\n     \n     <div>\n     <img className={s.userImage} src={props.profile.photos.large ?? userPhoto} alt=\"userImage\"/>\n     <h3>{props.profile.fullName}</h3>\n     </div>\n     <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\n     <div className={s.descriptionBlock} >\n        <h4>about me: </h4>\n        <p>{props.profile.aboutMe}</p>\n     <p>{(props.profile.lookingForAJob) ? '–Ø –∏—â—É —Ä–∞–±–æ—Ç—É' : '–Ø –Ω–µ –∏—â—É —Ä–∞–±–æ—Ç—É, —Å–ø–∞—Å–∏–±–æ!'}</p>\n     <p>{props.profile.lookingForAJobDescription}</p>\n     <h4>My contacts: </h4>\n    <p href=\"#\">{props.profile.contacts.facebook}</p>\n    <p href=\"#\">{props.profile.contacts.website}</p>\n    <p href=\"#\">{props.profile.contacts.vk}</p>\n    <p href=\"#\">{props.profile.contacts.twitter}</p>\n    <p href=\"#\">{props.profile.contacts.instagram}</p>\n    <p href=\"#\">{props.profile.contacts.youtube}</p>\n    <p href=\"#\">{props.profile.contacts.github}</p>\n    <p href=\"#\">{props.profile.contacts.mainLink}</p>\n    </div> \n\n     </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\n\n\nconst Post = (props) => {\n    \n\n    return(\n    <div className={s.item}>\n        {props.message}\n        {props.name}\n        <div>\n        <span>üñ§ ~ </span>    { props.likesCounts}\n        </div>\n        \n    </div>\n\n\n    )\n}\n\nexport default Post;","\nimport React from 'react';\nimport { Field , reduxForm} from 'redux-form';\nimport Post from '../Post/Post';  \nimport s from './MyPosts.module.css';\nimport {required, maxLengthCreator}  from '../../../Utils/Validators/validator';\nimport {Textarea} from '../../common/FormControls/FormsControls';\n\n\nconst maxLenght = maxLengthCreator(100);\n\nconst  MyPosts = React.memo (props  => {\n\n// shouldComponentUpdate(nextProps, nextState){\n// return nextProps !== this.props || nextState !== this.state\n// }    //pure component —Å–¥–µ–ª–∞–µ—Ç —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ !!!!!\n\nlet postsElements =props.posts.map(p =>  <Post message={p.message} key={p.id} likesCounts={p.likesCounts}/>)\n \nlet onAddPost = (values) => {\n       props.addPost(values.newPostBody)\n  \n}\n\nconst AddPostForm = (props) => {\n       return <form onSubmit={props.handleSubmit}>     \n        <Field component={Textarea} name=\"newPostBody\" validate={[required, maxLenght]} placeholder={\"Type your post\"}/>\n        <button>Add post</button>\n       </form>\n   }\nconst AddPostReduxForm = reduxForm({ form: 'addPostForm'})(AddPostForm);\n\n    return (\n        <div className={s.postsBlock}>\n        <h3>My posts</h3>\n        <div>\n     <AddPostReduxForm onSubmit={onAddPost}/>\n        </div>\n<div className={s.posts}> \n       {postsElements}    \n</div>\n </div>\n    )\n})\n\n\nexport default MyPosts;","\nimport { connect } from 'react-redux';\nimport {addPostActionCreator} from '../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\n\n\nlet mapStateToProps = (state)=> {\n    return{\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps =(dispatch) => {\nreturn{\n    addPost: (newPostBody)=> {\n        dispatch(addPostActionCreator(newPostBody));\n    },\n}\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer' ;\nimport s from './Profile.module.css';\n\n\n\nconst Profile = (props) => {\n    return ( \n        <div className={s.profileBlock}>\n       \n       <ProfileInfo profile={props.profile} \n       status={props.status} \n       updateUserStatus={props.updateUserStatus}/>\n       <MyPostsContainer store={props.store} />\n      </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\n\n\nclass  ProfileContainer extends React.Component{\n\n    componentDidMount(){\n       let userId = this.props.match.params.userId;\n       if(!userId){\n           userId = this.props.authorizedUserId\n           if(!userId){\n               this.props.history.push(\"/login\");\n           }\n       }\n       this.props.getUserProfile(userId);\n        this.props.getUserStatus(userId);\n}\n\n    render() {\n        return ( \n           <Profile {...this.props} \n           profile={this.props.profile} \n           status={this.props.status}\n           updateUserStatus={this.props.updateUserStatus}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n    connect(mapStateToProps, ({getUserProfile, getUserStatus, updateUserStatus})),\n    withRouter,\n    withAuthRedirect\n)\n(ProfileContainer);\n\n"],"sourceRoot":""}